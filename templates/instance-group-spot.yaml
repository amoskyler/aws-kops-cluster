apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  name: ${instance_group_name}
  labels:
    kops.k8s.io/cluster: ${cluster_name}
    kops.k8s.io/instancegroup: ${instance_group_name}
spec:
  #additionalUserData:
  #- name: reserved-resources.sh
  #  type: text/x-shellscript
  #  content: |
  #    #!/bin/sh
  #    
  cloudLabels:
    Cluster: "${cluster_name}"
    Namespace: "${namespace}"
    Stage: "${stage}"
    Region: "${region}"
    Role: "${instance_name}"
    kops.k8s.io/cluster: "${cluster_name}"
    kops.k8s.io/instancegroup: "${instance_group_name}"
    kubernetes.io/cluster/${cluster_name}: owned
    k8s.io/cluster-autoscaler/${autoscaler}: ""
    k8s.io/cluster-autoscaler/node-template/label/instance_type: ${instance_name}
    k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: ${instance_group_name}
  image: ${image}
  machineType: ${instance_type}
  maxSize: ${instance_max}
  minSize: ${instance_min}
  maxPrice: "${autospotting_max_price}"
  rootVolumeSize: ${storage_in_gb}
  rootVolumeType: ${storage_type}
  rootVolumeIops: ${storage_iops}
  associatePublicIp: ${public_ip}
  mixedInstancesPolicy:
    onDemandAboveBase: 0
    instances:
    - ${autospotting_instances}
  nodeLabels:
    Cluster: "${cluster_name}"
    Namespace: "${namespace}"
    Stage: "${stage}"
    Region: "${region}"
    Role: "${instance_name}"
    kops.k8s.io/cluster: "${cluster_name}"
    kops.k8s.io/instancegroup: "${instance_group_name}"
    instance_type: "${instance_name}"
    spot: "true"
  role: ${node_role}
  subnets: 
  - ${aws_subnet_id}
