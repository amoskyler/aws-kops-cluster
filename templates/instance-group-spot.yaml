apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  name: ${instance_group_name}
  labels:
    kops.k8s.io/cluster: ${cluster_name}
    kops.k8s.io/instancegroup: ${instance_group_name}
spec:
  #additionalUserData:
  #- name: reserved-resources.sh
  #  type: text/x-shellscript
  #  content: |
  #    #!/bin/sh
  #    
  cloudLabels:
    Cluster: ${cluster_name}
    Namespace: ${namespace}
    Stage: ${stage}
    Region: ${region}
    Role: ${instance_name}
    kops.k8s.io/cluster: ${cluster_name}
    kops.k8s.io/instancegroup: ${instance_group_name}
    kubernetes.io/cluster/${cluster_name}: owned
    k8s.io/cluster-autoscaler/${autoscaler}: \"\"
    k8s.io/cluster-autoscaler/node-template/label/instance_type: ${instance_name}
    k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: ${instance_group_name}
  image: ${image}
  machineType: ${instance_type}
  maxSize: ${instance_max}
  minSize: ${instance_min}
  maxPrice: \"${autospotting_max_price}\"
  rootVolumeSize: ${storage_in_gb}
  rootVolumeType: ${storage_type}
  rootVolumeIops: ${storage_iops}
  associatePublicIp: ${public_ip}
  %{ if external_lb_name != "" }
  externalLoadBalancers:
  - loadBalancerName: ${external_lb_name}
  %{ endif }
  mixedInstancesPolicy:
    onDemandAboveBase: 0
    # https://github.com/kubernetes/kops/issues/7405
    # spotAllocationStrategy: diversified
    instances:
    %{ for instance in autospotting_instances ~}
    - ${instance}
    %{ endfor ~}  
  nodeLabels:
    Cluster: ${cluster_name}
    Namespace: ${namespace}
    Stage: ${stage}
    Region: ${region}
    Role: ${instance_name}
    kops.k8s.io/cluster: ${cluster_name}
    kops.k8s.io/instancegroup: ${instance_group_name}
    instance_type: ${instance_name}
    spot: \"true\"
  role: ${node_role}
  subnets: 
  %{ for subnet in subnets ~}
  - ${subnet_type}-${subnet}
  %{ endfor ~}  
